// <auto-generated />
using System;
using FridgesService.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FridgeManager.FridgesMicroService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221130100025_added-owners-table")]
    partial class addedownerstable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FridgeModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FridgeModelId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Fridges");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FridgeModels");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.FridgeProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProducts");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("MailingConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08361c51-e528-4b91-96c6-d0e100e2da32"),
                            DefaultQuantity = 5,
                            ImageSource = "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Assorted_bread.jpg/274px-Assorted_bread.jpg",
                            Name = "Bread"
                        },
                        new
                        {
                            Id = new Guid("69f75297-6ea9-41b0-b59b-97788e75d291"),
                            DefaultQuantity = 10,
                            ImageSource = "https://id-test-11.slatic.net/p/70f40d8f77f844671af4a5a11755e7ae.jpg",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("027e90e0-1bae-47a1-a9e2-5e77d433a2a7"),
                            DefaultQuantity = 15,
                            ImageSource = "https://cdn.yamatoscale.com/wp-content/uploads/2016/04/K%C3%A4se-Scheiben_01_00_OH-1.jpg",
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = new Guid("96895abc-efd8-4741-9d59-d62620a6d573"),
                            DefaultQuantity = 11,
                            ImageSource = "https://4.imimg.com/data4/JX/UQ/ANDROID-47104262/product-500x500.jpeg",
                            Name = "Mashroom"
                        },
                        new
                        {
                            Id = new Guid("99c007af-d4c8-4db0-9b7a-0b5f1149c113"),
                            DefaultQuantity = 3,
                            ImageSource = "https://preview.free3d.com/img/2017/05/2279485108920518249/e92jihnh-900.jpg",
                            Name = "Fish"
                        });
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.Fridge", b =>
                {
                    b.HasOne("FridgeManager.FridgesMicroService.EF.Entities.FridgeModel", "FridgeModel")
                        .WithMany("Fridges")
                        .HasForeignKey("FridgeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManager.FridgesMicroService.EF.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FridgeModel");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.FridgeProduct", b =>
                {
                    b.HasOne("FridgeManager.FridgesMicroService.EF.Entities.Fridge", "Fridge")
                        .WithMany("Products")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManager.FridgesMicroService.EF.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.Fridge", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FridgeManager.FridgesMicroService.EF.Entities.FridgeModel", b =>
                {
                    b.Navigation("Fridges");
                });
#pragma warning restore 612, 618
        }
    }
}
